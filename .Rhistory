group_by(loc, loc_code) %>%
mutate(share = (value / pop)* 100) %>%
ungroup()
pxb <- left_join(pxb,
pxb %>%
filter(loc_code == "GE") %>%
rename(shareCanton = share) %>%
select(age_group2, shareCanton)
) %>%
mutate(diffCanton = share - shareCanton)
locationCode_subset <- c('8100', 'GE', 6600:6650)
cleanOutput <- F
downloadPx <- F
wranglePx <- F
age.url <- "https://www.pxweb.bfs.admin.ch/DownloadFile.aspx?file=px-x-0102010000_101"
require(pxR)
require(lintr)
require(here)
library(tidyverse)
library(magrittr)
library(stringr)
library(knitr)
library(sf)
library(tamMap)
library(tamTheme)
library(hrbrthemes)
library(ggridges)
library(skimr)
### Interactive
library(ggiraph)
library(htmltools)
library(highcharter)
### Misc stuff
#require(classInt)
#require(viridis)
if(downloadPx) {
download.file(age.url, "data/px-x-0102010000_101.px")
}
if(wranglePx) {
pxa <- ofsPx_wrangle("data/px-x-0102010000_101.px", attachCode = "Canton.......District........Commune.........") %>%
as.tibble()
pxa %<>% filter(
pxa$Age != "Age - Total",
Année == 2016,
Type.de.population == "Population résidante permanente",
Sexe == "Sexe - Total"
) %>%
select(-`Type.de.population`, -Sexe, -Année) %>%
rename(
nat = `Nationalité..catégorie.`,
loc = `Canton.......District........Commune.........`,
loc_code = `Canton.......District........Commune........._code`
) %>%
# reformat Age as numeric
mutate(
Age = str_replace(Age, " ans?", ""),
Age = as.numeric(str_replace(Age, " ou plus", ""))
)
# filter Geneva, Switzerland
pxge <- pxa %>% filter(loc_code %in% locationCode_subset)
# write everything down
pxge %>% write_csv("input/pxge_age_muni.csv")
} else {
pxge <- read_csv("input/pxge_age_muni.csv")
}
locationCode_subset <- c('8100', 'GE', 6600:6650)
cleanOutput <- F
downloadPx <- F
wranglePx <- F
age.url <- "https://www.pxweb.bfs.admin.ch/DownloadFile.aspx?file=px-x-0102010000_101"
require(pxR)
require(lintr)
require(here)
library(tidyverse)
library(magrittr)
library(stringr)
library(knitr)
library(sf)
library(tamMap)
library(tamTheme)
library(hrbrthemes)
library(ggridges)
library(skimr)
### Interactive
library(ggiraph)
library(htmltools)
library(highcharter)
### Misc stuff
#require(classInt)
#require(viridis)
if(downloadPx) {
download.file(age.url, "data/px-x-0102010000_101.px")
}
if(wranglePx) {
pxa <- ofsPx_wrangle("data/px-x-0102010000_101.px", attachCode = "Canton.......District........Commune.........") %>%
as.tibble()
pxa %<>% filter(
pxa$Age != "Age - Total",
Année == 2016,
Type.de.population == "Population résidante permanente",
Sexe == "Sexe - Total"
) %>%
select(-`Type.de.population`, -Sexe, -Année) %>%
rename(
nat = `Nationalité..catégorie.`,
loc = `Canton.......District........Commune.........`,
loc_code = `Canton.......District........Commune........._code`
) %>%
# reformat Age as numeric
mutate(
Age = str_replace(Age, " ans?", ""),
Age = as.numeric(str_replace(Age, " ou plus", ""))
)
# filter Geneva, Switzerland
pxge <- pxa %>% filter(loc_code %in% locationCode_subset)
# write everything down
pxge %>% write_csv("input/pxge_age_muni.csv")
} else {
pxge <- read_csv("input/pxge_age_muni.csv")
}
loc_pos <- tibble(
loc = unique(pxge$loc),
loc_pos = (unique(pxge$loc) %>% length()):1
)
pxge <- left_join(pxge, loc_pos) %>%
group_by(loc, loc_pos) %>%
mutate(
totAge = sum(value),
age = (value / totAge) * 100
) %>%
ungroup()
brks <- seq(0, 100, 10)
brks2 <- c(-1, 20, 60, 100)
pxge %<>% mutate(
age_group = cut(Age, breaks = 10,
label = formatBreaks(brks), right = T),
age_group2 = cut(Age, breaks = brks2, label = formatBreaks(brks2), right = T)
)
pxb <- pxge %>%
filter(nat == "Nationalité (catégorie) - Total") %>%
group_by(loc, loc_code, age_group2) %>%
summarise(value = sum(value)) %>%
ungroup() %>%
group_by(loc, loc_code) %>%
mutate(pop = sum(value)) %>%
ungroup() %>%
group_by(loc, loc_code) %>%
mutate(share = (value / pop)* 100) %>%
ungroup()
pxb <- left_join(pxb,
pxb %>%
filter(loc_code == "GE") %>%
rename(shareCanton = share) %>%
select(age_group2, shareCanton)
) %>%
mutate(diffCanton = share - shareCanton)
# pxge %>% group_by(loc, loc_pos) %>%
#   summarise(check = sum(age)) %>%
#   ungroup() %>%
#   .$check
pxge %>%
filter(nat == "Nationalité (catégorie) - Total") %>%
ggplot() +
geom_area(aes(x = Age, y = age, group  = loc)) +
facet_wrap(~loc)
pxge %>%
filter(nat == "Nationalité (catégorie) - Total") %>%
ggplot() +
geom_area(aes(x = Age, y = age, group  = loc)) +
facet_wrap(~loc)
pxge %>%
filter(nat == "Nationalité (catégorie) - Total") %>%
ggplot() +
geom_tile(aes(x = Age, y = loc, fill = age)) +
scale_fill_viridis_c()
pxb %>% ggplot() +
geom_col(aes(x = age_group2, y = diffCanton, group = loc, fill = age_group)) +
facet_wrap(~ loc)
pxb %>% ggplot() +
geom_col(aes(x = age_group2, y = diffCanton, group = loc, fill = age_group2)) +
facet_wrap(~ loc)
revenus_commune <- "data/T_20_02_3_21.xlsx"
revenues_ville <- "data/T_20_02_3_22.xlsx"
cleanOutput <- F
downloadWaterGE <- F
require(lintr)
library(tidyverse)
library(magrittr)
library(stringr)
library(knitr)
library(tamMap)
library(tamTheme)
library(sf)
library(hrbrthemes)
### Interactive
library(ggiraph)
library(htmltools)
#library(swiRcharts)
library(classInt)
revenus <- readxl::read_excel(revenus_commune, range = "A20:Q64", col_names = F) %>%
select(-X__4, -X__6, -X__11, -X__13)
revenus <- readxl::read_excel(revenus_commune, range = "A20:Q64", col_names = F) %>%
select(-X__4, -X__6, -X__11, -X__13)
getwd()
revenus <- readxl::read_excel(revenus_commune, range = "A20:Q64", col_names = F) %>%
select(-X__4, -X__6, -X__11, -X__13)
revenus_commune <- "data/T_20_02_3_21.xlsx"
revenues_ville <- "data/T_20_02_3_22.xlsx"
cleanOutput <- F
downloadWaterGE <- F
require(lintr)
library(tidyverse)
library(magrittr)
library(stringr)
library(knitr)
library(tamMap)
library(tamTheme)
library(sf)
library(hrbrthemes)
### Interactive
library(ggiraph)
library(htmltools)
#library(swiRcharts)
library(classInt)
revenus <- readxl::read_excel(revenus_commune, range = "A20:Q64", col_names = F) %>%
select(-X__4, -X__6, -X__11, -X__13)
setwd("~/tg/2018_07_18_revenusFortune_GE")
revenus <- readxl::read_excel(revenus_commune, range = "A20:Q64", col_names = F) %>%
select(-X__4, -X__6, -X__11, -X__13)
names(revenus) <- c('nom', 'effectif_abs', 'effectif_pc',
'marie_nb', 'marie_q1', 'marie_q2', 'marie_q3', 'marie_q3q1',
'celib_nb', 'celib_q1', 'celib_q2', 'celib_q3', 'celib_q3q1')
revenus %<>% select(-effectif_abs, -effectif_pc, -marie_q3q1, -celib_q3q1)
# make it long
longify <- function(df, groupName = "marie") {
dfsub <- df %>%
select(nom, starts_with(groupName))
colnames(dfsub) <- c('nom', 'n', 'q1', 'q2', 'q3')
dfsub %<>%
gather("quantile", "revenu", -nom, -n) %>%
mutate(contrib = groupName)
dfsub
}
rvn <- bind_rows(longify(revenus, "marie"), longify(revenus, "celib"))
## GE ville
rville <- readxl::read_excel(revenues_ville, range = "A20:Q39", col_names = F) %>%
select(-X__4, -X__6, -X__10, -X__11, -X__13, -X__17)
names(rville) <- c('nom', 'effectif_abs', 'effectif_pc',
'marie_nb', 'marie_q1', 'marie_q2', 'marie_q3',
'celib_nb', 'celib_q1', 'celib_q2', 'celib_q3')
rville %<>% select(-effectif_abs, -effectif_pc) %>%
filter(!nom %in% c('Genève-Cité', 'Plainpalais', 'Eaux-Vives', 'Petit-Saconnex')) %>%
mutate(nom = str_replace(nom, "Cité\\-Centre", "Cité \\- Centre")) %>%
mutate(nom = str_replace(nom, "^La ", "")) %>%
mutate(nom = str_replace(nom, "St\\-Jean \\- Aïre", "St-Jean - Aire"))
rvr <- bind_rows(longify(rville, "marie"), longify(rville, "celib"))
gp <- rvn %>%
ggplot() +
geom_point(aes(x = fct_reorder(nom, revenu), y = revenu, group = quantile, colour = quantile)) +
facet_grid(~ contrib) +
ggtitle("Revenus des couples mariés montrent la plus large disparité") +
theme_ipsum_tw() +
scale_color_ipsum() +
theme(
axis.text.x = element_text(angle = 90, hjust = 0),
legend.position = "top"
)
gp
gp %+% rvr
gp2 <- revenus %>%
mutate(propMarie = marie_nb / (celib_nb + marie_nb)) %>%
select(nom, propMarie, marie_q2) %>%
ggplot() +
geom_point(
aes(x = fct_reorder(nom, propMarie),
y = propMarie, group = nom, size = marie_q2)) +
theme_ipsum_tw() +
theme(
axis.text.x = element_text(angle = 90, hjust = 0)
)
gp2
rville %>%
mutate(propMarie = marie_nb / (celib_nb + marie_nb)) %>%
select(nom, propMarie, marie_q2) %>%
ggplot() +
geom_point(
aes(x = fct_reorder(nom, propMarie),
y = propMarie, group = nom, size = marie_q2)) +
theme_ipsum_tw() +
theme(
axis.text.x = element_text(angle = 90, hjust = 0)
)
shp_ch_paths_2018 <- shp_path(2018)
shp_quartiers <- shp_path(dirGeo = "CH/quartiers")
x <- shp_ch_paths_2018['municipalities']
layerName <- st_layers(x)
muni <- st_read(x, layer = layerName$name,
options = "ENCODING=latin1", stringsAsFactors = F) %>%
select(ends_with("NR"), ends_with("NAME")) %>%
filter(KTNR == 25) %>%
select(-KTNR) %>%
# remove the GE in the commune name
mutate(GMDNAME = str_replace(GMDNAME, " \\(GE\\)$", "")) %>%
# remove Le in  "Le Grand-Saconnex"
mutate(GMDNAME = str_replace(GMDNAME, "^Le ", "")) %>%
rename(nom = GMDNAME)
stopifnot(all(!is.na(match(unique(rvn$nom), unique(muni$nom)))))
layerName <- st_layers(shp_quartiers)
quart <- st_read(shp_quartiers, layer = "quart17",
options = "ENCODING=latin1", stringsAsFactors = F) %>%
filter(GMDE == 6621) %>%
select(NR, NAME, GMDE) %>%
rename(nom = NAME)
stopifnot(all(!is.na(match(unique(rville$nom), unique(quart$nom)))))
if(downloadWaterGE) {
library(esri2sf)
url <- 'https://ge.ch/sitgags1/rest/services/VECTOR/SITG_OPENDATA_02/MapServer/6186'
water <- esri2sf(url)
water <- st_transform(water, st_crs(muni))
water %>% st_write(dsn = "data/", driver = "ESRI Shapefile", layer = "waterGE.shp")
} else {
water <- st_read("data/waterGE.shp", layer = "waterGE")
}
dat <- left_join(muni, rvn)
inlet_geo <- shiftScale_geo(geo = quart, scaleF = 3, shiftM = c(-11000, 16000))
datv <- left_join(inlet_geo, rvr)
# Create circles sf to encompass the inlet map and its original location
geo_subset_coord <- encircle_coord(quart)
inlet_coord <- encircle_coord(inlet_geo)
cone_sfc <- cone_geo(geo_subset_coord, inlet_coord)
circle_zoom_sfc <- encircle_geo(geo_subset_coord)
circle_inlet_sfc <- encircle_geo(inlet_coord)
labels <- bind_rows(
muni %>% st_centroid() %>%
st_coordinates() %>% as_tibble() %>%
mutate(nom = muni$nom),
inlet_geo %>% st_centroid() %>%
st_coordinates() %>% as_tibble()  %>%
mutate(nom = inlet_geo$nom)
)
watercol <- "#958da6"
labelcol <- "#f6d5de"
bordercol <- '#c4c6d4'
baseFont <-  "Titillium Web"
# create revenu breaks
brks <- seq(80000, 260000, 20000)
brks_labels <- c("<100\nmille CHF", "100-120", "120-140",
"140-160", "160-180", "180-200", "200-220",
"220-240", "240+\nmille CHF")
q2datv <- datv %>%
filter(contrib == 'marie') %>%
spread(quantile, revenu) %>%
mutate(
catrev = cut(q2, brks, labels = brks_labels),
tp = str_c('<div class = "tp"><h4>', nom, '</h4>',
"revenu médian des couples mariés: <b>",
format(q2, big.mark = " "), " </b>CHF<br>",
"effectif: ", n)
)
q2datc <-  dat %>%  filter(contrib == 'marie') %>%
spread(quantile, revenu) %>%
mutate(
catrev = cut(q2, brks, labels = brks_labels),
tp = str_c('<div class = "tp"><h4>', nom, '</h4>',
"revenu médian des couples mariés: <b>",
format(q2, big.mark = " "), " </b>CHF<br>",
"effectif: ", n)
)
inlet_sfc_bbox <- circle_inlet_sfc %>% st_bbox()
inlet_label <- tibble(
x = inlet_coord$centre %>% st_coordinates() %>% as.tibble() %>% .$X,
y = inlet_sfc_bbox$ymax -770,
label = "Ville de Genève"
)
q2map <- ggplot() +
geom_sf(data = cone_sfc, fill = "#dcb7dc", lwd = NA, alpha = 0.15) +
geom_sf(data = circle_inlet_sfc, fill = "#dcb7dc", lwd = NA, alpha = 0.15) +
geom_sf_interactive(data = q2datc,
aes(fill = catrev, data_id = GMDNR, tooltip = tp), lwd = 0.05, colour = bordercol) +
geom_sf(data = muni %>% filter(GMDNR == 6621),
fill = NA, lwd = 0.7, colour = "#ffdaff") +
geom_sf_interactive(data = q2datv,
aes(fill = catrev, data_id = NR, tooltip = tp), lwd = 0.06, colour = bordercol)  +
geom_sf(
data = water, lwd = 0.9, fill = watercol, alpha = 1, colour = watercol
) +
geom_text(data = inlet_label, aes(x = x, y = y, label = label), hjust = 0.5, vjust = 1,
family = baseFont, size = 2.5, alpha = 1, fontface = "bold", colour = "#404040") #+
# geom_text(data = labels,
#           aes(x = X, y = Y, label = nom), family = baseFont,
#           size = 1.1, alpha = 1, check_overlap = T, colour = labelcol )
q2map <- q2map +
theme_map(base_family = baseFont) +
theme(legend.position = 'top',
legend.key = element_blank(),
plot.margin = margin(-5, 5, 0, 1.1, "pt"),
) +
scale_fill_viridis_d(
option = "D", guide = guide_legend(
nrow = 1, direction = 'horizontal', label.hjust = 0, label.position = 'bottom',
keywidth = 2, keyheight = 0.5, title = ""))  +
coord_sf(datum = NA, expand = F)
imap <- ggiraph(
code = print(q2map),
width = 1,
height_svg = 5,
tooltip_offx = -50,
width_svg = 4.5,
tooltip_extra_css = "background-color:#d9d9d9;padding:0px;margin:0px;border-radius:4px;"
)
imap
setwd("~/tg/2018_09_13_loyerGE")
downloadWaterGE
downloadWaterGE <- T
# Chunk 1: setup
downloadWaterGE <- F
cleanOutput <- F
require(lintr)
require(here)
library(tidyverse)
library(magrittr)
library(stringr)
library(knitr)
library(sf)
library(tamMap)
library(tamTheme)
library(hrbrthemes)
library(skimr)
### Getting data in packages
library(secret)
### Interactive
library(ggiraph)
library(htmltools)
library(highcharter)
### Misc stuff
#require(classInt)
#require(viridis)
if(downloadWaterGE) {
library(esri2sf)
url <- 'https://ge.ch/sitgags1/rest/services/VECTOR/SITG_OPENDATA_02/MapServer/6186'
water <- esri2sf(url)
water <- st_transform(water, st_crs(muni))
water %>% st_write(dsn = "data/", driver = "ESRI Shapefile", layer = "waterGE.shp")
} else {
water <- st_read("data/waterGE.shp", layer = "waterGE")
}
downloadWaterGE
downloadWaterGE <- T
if(downloadWaterGE) {
library(esri2sf)
url <- 'https://ge.ch/sitgags1/rest/services/VECTOR/SITG_OPENDATA_02/MapServer/6186'
water <- esri2sf(url)
water <- st_transform(water, st_crs(muni))
water %>% st_write(dsn = "data/", driver = "ESRI Shapefile", layer = "waterGE.shp")
} else {
water <- st_read("data/waterGE.shp", layer = "waterGE")
}
install.packages("esri2sf")
library(devtools)
install_github("yonghah/esri2sf")
library(devtools)
install_github("yonghah/esri2sf")
if(downloadWaterGE) {
library(esri2sf)
url <- 'https://ge.ch/sitgags1/rest/services/VECTOR/SITG_OPENDATA_02/MapServer/6186'
water <- esri2sf(url)
water <- st_transform(water, st_crs(muni))
water %>% st_write(dsn = "data/", driver = "ESRI Shapefile", layer = "waterGE.shp")
} else {
water <- st_read("data/waterGE.shp", layer = "waterGE")
}
shp_ch_paths_2018 <- shp_path(2018)
shp_quartiers <- shp_path(dirGeo = "CH/quartiers")
x <- shp_ch_paths_2018['municipalities']
layerName <- st_layers(x)
muni <- st_read(x, layer = layerName$name,
options = "ENCODING=latin1", stringsAsFactors = F) %>%
select(ends_with("NR"), ends_with("NAME")) %>%
filter(KTNR == 25) %>%
select(-KTNR) %>%
# remove the GE in the commune name
mutate(GMDNAME = str_replace(GMDNAME, " \\(GE\\)$", "")) %>%
# remove Le in  "Le Grand-Saconnex"
mutate(GMDNAME = str_replace(GMDNAME, "^Le ", "")) %>%
rename(nom = GMDNAME)
stopifnot(all(!is.na(match(unique(rvn$nom), unique(muni$nom)))))
layerName <- st_layers(shp_quartiers)
quart <- st_read(shp_quartiers, layer = "quart17",
options = "ENCODING=latin1", stringsAsFactors = F) %>%
filter(GMDE == 6621) %>%
select(NR, NAME, GMDE) %>%
rename(nom = NAME)
stopifnot(all(!is.na(match(unique(rville$nom), unique(quart$nom)))))
if(downloadWaterGE) {
library(esri2sf)
url <- 'https://ge.ch/sitgags1/rest/services/VECTOR/SITG_OPENDATA_02/MapServer/6186'
water <- esri2sf(url)
water <- st_transform(water, st_crs(muni))
water %>% st_write(dsn = "data/", driver = "ESRI Shapefile", layer = "waterGE.shp")
} else {
water <- st_read("data/waterGE.shp", layer = "waterGE")
}
library(esri2sf)
url <- 'https://ge.ch/sitgags1/rest/services/VECTOR/SITG_OPENDATA_02/MapServer/6186'
water <- esri2sf(url)
water <- st_transform(water, st_crs(muni))
getwd()
water %>% st_write(dsn = "data/", driver = "ESRI Shapefile", layer = "waterGE.shp")
getwd()
str(water)
water
water %>% st_write(dsn = "data/", driver = "ESRI Shapefile", layer = "waterGE.shp")
